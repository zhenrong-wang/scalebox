"""add account_id uuid to users

Revision ID: ce54d03dff09
Revises: 87bb50aeea65
Create Date: 2025-07-09 15:38:09.097891

"""
from typing import Sequence, Union

from alembic import op  # type: ignore
import sqlalchemy as sa
import uuid


# revision identifiers, used by Alembic.
revision: str = 'ce54d03dff09'
down_revision: Union[str, Sequence[str], None] = '87bb50aeea65'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('account_id', sa.String(length=36), nullable=True))
    op.create_index(op.f('ix_users_account_id'), 'users', ['account_id'], unique=True)
    # Backfill account_id for existing users
    bind = op.get_bind()
    users = list(bind.execute(sa.text('SELECT id FROM users WHERE account_id IS NULL OR account_id = ""')))
    for user in users:
        bind.execute(sa.text('UPDATE users SET account_id = :uuid WHERE id = :id'), {"uuid": str(uuid.uuid4()), "id": user[0]})
    # Add NOT NULL constraint using raw SQL
    op.execute('ALTER TABLE users MODIFY COLUMN account_id VARCHAR(36) NOT NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_account_id'), table_name='users')
    op.drop_column('users', 'account_id')
    # ### end Alembic commands ###
