"""baseline

Revision ID: 666ed0fbe879
Revises: 
Create Date: 2025-07-17 03:05:18.967763

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '666ed0fbe879'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pending_signups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('signup_id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('verification_token', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pending_signup_email', 'pending_signups', ['email'], unique=False)
    op.create_index('idx_pending_signup_expires', 'pending_signups', ['expires_at'], unique=False)
    op.create_index('idx_pending_signup_token', 'pending_signups', ['verification_token'], unique=False)
    op.create_index(op.f('ix_pending_signups_email'), 'pending_signups', ['email'], unique=False)
    op.create_index(op.f('ix_pending_signups_expires_at'), 'pending_signups', ['expires_at'], unique=False)
    op.create_index(op.f('ix_pending_signups_signup_id'), 'pending_signups', ['signup_id'], unique=True)
    op.create_index(op.f('ix_pending_signups_verification_token'), 'pending_signups', ['verification_token'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.String(length=13), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('reset_token', sa.String(length=255), nullable=True),
    sa.Column('reset_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_password_reset_request', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_account_id', 'users', ['account_id'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_account_id'), 'users', ['account_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('api_key', sa.String(length=40), nullable=False),
    sa.Column('user_account_id', sa.String(length=13), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('key_hash', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_account_id', 'name', name='unique_api_key_name_per_user')
    )
    op.create_index('idx_api_key_active', 'api_keys', ['is_active'], unique=False)
    op.create_index('idx_api_key_last_used', 'api_keys', ['last_used_at'], unique=False)
    op.create_index('idx_api_key_user_account', 'api_keys', ['user_account_id'], unique=False)
    op.create_index(op.f('ix_api_keys_api_key'), 'api_keys', ['api_key'], unique=True)
    op.create_index(op.f('ix_api_keys_user_account_id'), 'api_keys', ['user_account_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('notification_id', sa.String(length=36), nullable=False),
    sa.Column('user_account_id', sa.String(length=13), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('related_entity_type', sa.String(length=100), nullable=True),
    sa.Column('related_entity_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_created', 'notifications', ['created_at'], unique=False)
    op.create_index('idx_notification_read', 'notifications', ['is_read'], unique=False)
    op.create_index('idx_notification_type', 'notifications', ['type'], unique=False)
    op.create_index('idx_notification_user_account', 'notifications', ['user_account_id'], unique=False)
    op.create_index(op.f('ix_notifications_notification_id'), 'notifications', ['notification_id'], unique=True)
    op.create_index(op.f('ix_notifications_user_account_id'), 'notifications', ['user_account_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_account_id', sa.String(length=13), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_account_id', 'name', name='unique_project_name_per_account')
    )
    op.create_index('idx_project_created', 'projects', ['created_at'], unique=False)
    op.create_index('idx_project_owner_account', 'projects', ['owner_account_id'], unique=False)
    op.create_index('idx_project_status', 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_owner_account_id'), 'projects', ['owner_account_id'], unique=False)
    op.create_index(op.f('ix_projects_project_id'), 'projects', ['project_id'], unique=True)
    op.create_table('templates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('template_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('language', sa.String(length=100), nullable=False),
    sa.Column('min_cpu_required', sa.Float(), nullable=False),
    sa.Column('min_memory_required', sa.Float(), nullable=False),
    sa.Column('is_official', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('owner_account_id', sa.String(length=13), nullable=True),
    sa.Column('repository_url', sa.String(length=500), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_account_id', 'name', name='unique_template_name_per_owner')
    )
    op.create_index('idx_template_category', 'templates', ['category'], unique=False)
    op.create_index('idx_template_language', 'templates', ['language'], unique=False)
    op.create_index('idx_template_official', 'templates', ['is_official'], unique=False)
    op.create_index('idx_template_owner_account', 'templates', ['owner_account_id'], unique=False)
    op.create_index('idx_template_public', 'templates', ['is_public'], unique=False)
    op.create_index(op.f('ix_templates_owner_account_id'), 'templates', ['owner_account_id'], unique=False)
    op.create_index(op.f('ix_templates_template_id'), 'templates', ['template_id'], unique=True)
    op.create_table('sandboxes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sandbox_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_id', sa.String(length=36), nullable=False),
    sa.Column('owner_account_id', sa.String(length=13), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=True),
    sa.Column('cpu_spec', sa.Float(), nullable=False),
    sa.Column('memory_spec', sa.Float(), nullable=False),
    sa.Column('max_running_seconds', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('latest_snapshot_id', sa.String(length=255), nullable=True),
    sa.Column('snapshot_expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.Column('timeout_at', sa.DateTime(), nullable=True),
    sa.Column('recycled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_account_id'], ['users.account_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['templates.template_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_account_id', 'name', name='unique_sandbox_name_per_owner')
    )
    op.create_index('idx_sandbox_created', 'sandboxes', ['created_at'], unique=False)
    op.create_index('idx_sandbox_owner_account', 'sandboxes', ['owner_account_id'], unique=False)
    op.create_index('idx_sandbox_project', 'sandboxes', ['project_id'], unique=False)
    op.create_index('idx_sandbox_started', 'sandboxes', ['started_at'], unique=False)
    op.create_index('idx_sandbox_status', 'sandboxes', ['status'], unique=False)
    op.create_index('idx_sandbox_stopped', 'sandboxes', ['stopped_at'], unique=False)
    op.create_index('idx_sandbox_template', 'sandboxes', ['template_id'], unique=False)
    op.create_index(op.f('ix_sandboxes_owner_account_id'), 'sandboxes', ['owner_account_id'], unique=False)
    op.create_index(op.f('ix_sandboxes_project_id'), 'sandboxes', ['project_id'], unique=False)
    op.create_index(op.f('ix_sandboxes_sandbox_id'), 'sandboxes', ['sandbox_id'], unique=True)
    op.create_index(op.f('ix_sandboxes_template_id'), 'sandboxes', ['template_id'], unique=False)
    op.create_table('billing_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('billing_id', sa.String(length=36), nullable=False),
    sa.Column('user_account_id', sa.String(length=13), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=True),
    sa.Column('sandbox_id', sa.String(length=36), nullable=True),
    sa.Column('billing_date', sa.DateTime(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('usage_seconds', sa.Integer(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
    sa.ForeignKeyConstraint(['sandbox_id'], ['sandboxes.sandbox_id'], ),
    sa.ForeignKeyConstraint(['user_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_billing_date', 'billing_records', ['billing_date'], unique=False)
    op.create_index('idx_billing_project', 'billing_records', ['project_id'], unique=False)
    op.create_index('idx_billing_sandbox', 'billing_records', ['sandbox_id'], unique=False)
    op.create_index('idx_billing_service_type', 'billing_records', ['service_type'], unique=False)
    op.create_index('idx_billing_user_account', 'billing_records', ['user_account_id'], unique=False)
    op.create_index(op.f('ix_billing_records_billing_date'), 'billing_records', ['billing_date'], unique=False)
    op.create_index(op.f('ix_billing_records_billing_id'), 'billing_records', ['billing_id'], unique=True)
    op.create_index(op.f('ix_billing_records_project_id'), 'billing_records', ['project_id'], unique=False)
    op.create_index(op.f('ix_billing_records_sandbox_id'), 'billing_records', ['sandbox_id'], unique=False)
    op.create_index(op.f('ix_billing_records_user_account_id'), 'billing_records', ['user_account_id'], unique=False)
    op.create_table('sandbox_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('metric_id', sa.String(length=36), nullable=False),
    sa.Column('sandbox_id', sa.String(length=36), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('cpu_utilization', sa.Float(), nullable=True),
    sa.Column('memory_utilization', sa.Float(), nullable=True),
    sa.Column('storage_utilization', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sandbox_id'], ['sandboxes.sandbox_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metrics_sandbox', 'sandbox_metrics', ['sandbox_id'], unique=False)
    op.create_index('idx_metrics_timestamp', 'sandbox_metrics', ['timestamp'], unique=False)
    op.create_index(op.f('ix_sandbox_metrics_metric_id'), 'sandbox_metrics', ['metric_id'], unique=True)
    op.create_index(op.f('ix_sandbox_metrics_sandbox_id'), 'sandbox_metrics', ['sandbox_id'], unique=False)
    op.create_index(op.f('ix_sandbox_metrics_timestamp'), 'sandbox_metrics', ['timestamp'], unique=False)
    op.create_table('sandbox_usage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('usage_id', sa.String(length=36), nullable=False),
    sa.Column('sandbox_id', sa.String(length=36), nullable=False),
    sa.Column('user_account_id', sa.String(length=13), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('running_seconds', sa.Integer(), nullable=True),
    sa.Column('cpu_hours', sa.Float(), nullable=True),
    sa.Column('memory_hours', sa.Float(), nullable=True),
    sa.Column('storage_hours', sa.Float(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sandbox_id'], ['sandboxes.sandbox_id'], ),
    sa.ForeignKeyConstraint(['user_account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usage_end_time', 'sandbox_usage', ['end_time'], unique=False)
    op.create_index('idx_usage_sandbox', 'sandbox_usage', ['sandbox_id'], unique=False)
    op.create_index('idx_usage_start_time', 'sandbox_usage', ['start_time'], unique=False)
    op.create_index('idx_usage_user_account', 'sandbox_usage', ['user_account_id'], unique=False)
    op.create_index(op.f('ix_sandbox_usage_end_time'), 'sandbox_usage', ['end_time'], unique=False)
    op.create_index(op.f('ix_sandbox_usage_sandbox_id'), 'sandbox_usage', ['sandbox_id'], unique=False)
    op.create_index(op.f('ix_sandbox_usage_start_time'), 'sandbox_usage', ['start_time'], unique=False)
    op.create_index(op.f('ix_sandbox_usage_usage_id'), 'sandbox_usage', ['usage_id'], unique=True)
    op.create_index(op.f('ix_sandbox_usage_user_account_id'), 'sandbox_usage', ['user_account_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sandbox_usage_user_account_id'), table_name='sandbox_usage')
    op.drop_index(op.f('ix_sandbox_usage_usage_id'), table_name='sandbox_usage')
    op.drop_index(op.f('ix_sandbox_usage_start_time'), table_name='sandbox_usage')
    op.drop_index(op.f('ix_sandbox_usage_sandbox_id'), table_name='sandbox_usage')
    op.drop_index(op.f('ix_sandbox_usage_end_time'), table_name='sandbox_usage')
    op.drop_index('idx_usage_user_account', table_name='sandbox_usage')
    op.drop_index('idx_usage_start_time', table_name='sandbox_usage')
    op.drop_index('idx_usage_sandbox', table_name='sandbox_usage')
    op.drop_index('idx_usage_end_time', table_name='sandbox_usage')
    op.drop_table('sandbox_usage')
    op.drop_index(op.f('ix_sandbox_metrics_timestamp'), table_name='sandbox_metrics')
    op.drop_index(op.f('ix_sandbox_metrics_sandbox_id'), table_name='sandbox_metrics')
    op.drop_index(op.f('ix_sandbox_metrics_metric_id'), table_name='sandbox_metrics')
    op.drop_index('idx_metrics_timestamp', table_name='sandbox_metrics')
    op.drop_index('idx_metrics_sandbox', table_name='sandbox_metrics')
    op.drop_table('sandbox_metrics')
    op.drop_index(op.f('ix_billing_records_user_account_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_sandbox_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_project_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_billing_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_billing_date'), table_name='billing_records')
    op.drop_index('idx_billing_user_account', table_name='billing_records')
    op.drop_index('idx_billing_service_type', table_name='billing_records')
    op.drop_index('idx_billing_sandbox', table_name='billing_records')
    op.drop_index('idx_billing_project', table_name='billing_records')
    op.drop_index('idx_billing_date', table_name='billing_records')
    op.drop_table('billing_records')
    op.drop_index(op.f('ix_sandboxes_template_id'), table_name='sandboxes')
    op.drop_index(op.f('ix_sandboxes_sandbox_id'), table_name='sandboxes')
    op.drop_index(op.f('ix_sandboxes_project_id'), table_name='sandboxes')
    op.drop_index(op.f('ix_sandboxes_owner_account_id'), table_name='sandboxes')
    op.drop_index('idx_sandbox_template', table_name='sandboxes')
    op.drop_index('idx_sandbox_stopped', table_name='sandboxes')
    op.drop_index('idx_sandbox_status', table_name='sandboxes')
    op.drop_index('idx_sandbox_started', table_name='sandboxes')
    op.drop_index('idx_sandbox_project', table_name='sandboxes')
    op.drop_index('idx_sandbox_owner_account', table_name='sandboxes')
    op.drop_index('idx_sandbox_created', table_name='sandboxes')
    op.drop_table('sandboxes')
    op.drop_index(op.f('ix_templates_template_id'), table_name='templates')
    op.drop_index(op.f('ix_templates_owner_account_id'), table_name='templates')
    op.drop_index('idx_template_public', table_name='templates')
    op.drop_index('idx_template_owner_account', table_name='templates')
    op.drop_index('idx_template_official', table_name='templates')
    op.drop_index('idx_template_language', table_name='templates')
    op.drop_index('idx_template_category', table_name='templates')
    op.drop_table('templates')
    op.drop_index(op.f('ix_projects_project_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_owner_account_id'), table_name='projects')
    op.drop_index('idx_project_status', table_name='projects')
    op.drop_index('idx_project_owner_account', table_name='projects')
    op.drop_index('idx_project_created', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_notifications_user_account_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_id'), table_name='notifications')
    op.drop_index('idx_notification_user_account', table_name='notifications')
    op.drop_index('idx_notification_type', table_name='notifications')
    op.drop_index('idx_notification_read', table_name='notifications')
    op.drop_index('idx_notification_created', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_api_keys_user_account_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_api_key'), table_name='api_keys')
    op.drop_index('idx_api_key_user_account', table_name='api_keys')
    op.drop_index('idx_api_key_last_used', table_name='api_keys')
    op.drop_index('idx_api_key_active', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_account_id'), table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_account_id', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_pending_signups_verification_token'), table_name='pending_signups')
    op.drop_index(op.f('ix_pending_signups_signup_id'), table_name='pending_signups')
    op.drop_index(op.f('ix_pending_signups_expires_at'), table_name='pending_signups')
    op.drop_index(op.f('ix_pending_signups_email'), table_name='pending_signups')
    op.drop_index('idx_pending_signup_token', table_name='pending_signups')
    op.drop_index('idx_pending_signup_expires', table_name='pending_signups')
    op.drop_index('idx_pending_signup_email', table_name='pending_signups')
    op.drop_table('pending_signups')
    # ### end Alembic commands ###
